{
    "info": {
        "title": "E-Commerce API",
        "description": "Swagger API documentation for the E-Commerce platform",
        "version": "1.0.0"
    },
    "paths": {
        "/auth/register": {
            "post": {
                "summary": "User registration\r",
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User registered successfully."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Name, email, and password are required."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "An error occurred."
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "name",
                                "email",
                                "password"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "John Johnson"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "John.johnson@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "password!"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "example": "+1234567890"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/auth/login": {
            "post": {
                "summary": "User login\r",
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciO..."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Email and password are required."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Invalid credentials."
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "email",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "John.johnson@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "password!"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/products": {
            "get": {
                "summary": "Get all products\r",
                "responses": {
                    "200": {
                        "description": "A list of all products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new product\r",
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden (Admins only)"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Wireless Earbuds"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Description!!!!"
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/products/{product_id}": {
            "get": {
                "summary": "Get a product by ID\r",
                "responses": {
                    "200": {
                        "description": "Product found",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product to retrieve"
                    }
                ],
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a product\r",
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product deleted successfully."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product to delete"
                    }
                ],
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update an existing product\r",
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one field (name, description, or rating) must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "New Product Name"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Updated product description"
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4.0
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/products/products_with_manufacturers": {
            "get": {
                "summary": "Get products with manufacturers\r",
                "responses": {
                    "200": {
                        "description": "A list of products with their manufacturers, prices, and stock",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "product_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "product_name": {
                                    "type": "string",
                                    "example": "Wireless Headphones"
                                },
                                "manufacturer_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "manufacturer_name": {
                                    "type": "string",
                                    "example": "Sound Ltd."
                                },
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 199.99
                                },
                                "stock": {
                                    "type": "integer",
                                    "example": 50
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/products/top_rated_products": {
            "get": {
                "summary": "Get top-rated products\r",
                "responses": {
                    "200": {
                        "description": "A list of top-rated products",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "product_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Wireless Headphones"
                                },
                                "average_rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4.7
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "summary": "Get all users\r",
                "responses": {
                    "200": {
                        "description": "A list of all users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users/{user_id}": {
            "delete": {
                "summary": "Delete a user\r",
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User deleted successfully."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the user to delete"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update user information\r",
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one field must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only update your own information"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the user to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "New Name"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "new.email@example.com"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "example": "+123456789"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "NewPassword123!"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "summary": "Get all orders\r",
                "responses": {
                    "200": {
                        "description": "A list of orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Access denied"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new order\r",
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order created successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "product_manufacturer_id and order_quantity are required"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ProductManufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "product_manufacturer_id",
                                "order_quantity"
                            ],
                            "properties": {
                                "product_manufacturer_id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "order_quantity": {
                                    "type": "integer",
                                    "example": 2
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders/{order_id}": {
            "get": {
                "summary": "Get an order by ID\r",
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Access denied"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order not found"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the order to retrieve"
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete an order\r",
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order deleted successfully"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the order to delete"
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update an order's status\r",
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order status updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cannot cancel the order at this stage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the order to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "Cancelled"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/cart": {
            "get": {
                "summary": "Get all items in the user's cart\r",
                "responses": {
                    "200": {
                        "description": "A list of cart items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cart_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_manufacturer_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "product_name": {
                                        "type": "string",
                                        "example": "Wireless Headphones"
                                    },
                                    "manufacturer_name": {
                                        "type": "string",
                                        "example": "Sound LTD."
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "Cart"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "summary": "Add an item to the cart\r",
                "responses": {
                    "201": {
                        "description": "Item added to cart successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Item added to cart successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or insufficient stock",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Invalid product_manufacturer_id or quantity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProductManufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "product_manufacturer_id"
                            ],
                            "properties": {
                                "product_manufacturer_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": 2
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/cart/{cart_id}": {
            "put": {
                "summary": "Update quantity of a cart item\r",
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cart item updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or insufficient stock",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Invalid quantity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item or ProductManufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cart item not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "cart_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the cart item to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "type": "integer",
                                    "example": 2
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Remove an item from the cart\r",
                "responses": {
                    "200": {
                        "description": "Cart item removed successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cart item removed successfully"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cart item not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "cart_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the cart item to remove"
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/cart/clear": {
            "delete": {
                "summary": "Clear all items from the cart\r",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cart cleared successfully"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "Cart"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/product_manufacturers": {
            "get": {
                "summary": "Get all product-manufacturer associations\r",
                "responses": {
                    "200": {
                        "description": "A list of product-manufacturer associations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductManufacturer"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "ProductManufacturer"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new product-manufacturer association\r",
                "responses": {
                    "201": {
                        "description": "ProductManufacturer entry created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer entry created successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "product_id, manufacturer_id, and price are required"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product or Manufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "product_id",
                                "manufacturer_id",
                                "price"
                            ],
                            "properties": {
                                "product_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "manufacturer_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 199.99
                                },
                                "stock": {
                                    "type": "integer",
                                    "example": 50
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "ProductManufacturer"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/product_manufacturers/{pm_id}": {
            "get": {
                "summary": "Get a product-manufacturer association by ID\r",
                "responses": {
                    "200": {
                        "description": "Product-manufacturer association found",
                        "schema": {
                            "$ref": "#/definitions/ProductManufacturer"
                        }
                    },
                    "404": {
                        "description": "ProductManufacturer entry not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer entry not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "pm_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product-manufacturer association to retrieve"
                    }
                ],
                "tags": [
                    "ProductManufacturer"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update a product-manufacturer association\r",
                "responses": {
                    "200": {
                        "description": "ProductManufacturer entry updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer entry updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one of price or stock must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProductManufacturer entry not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer entry not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "pm_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product-manufacturer association to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 199.99
                                },
                                "stock": {
                                    "type": "integer",
                                    "example": 50
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "ProductManufacturer"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a product-manufacturer association\r",
                "responses": {
                    "200": {
                        "description": "ProductManufacturer entry deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer entry deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cannot delete entry associated with existing orders"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProductManufacturer entry not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "ProductManufacturer entry not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "pm_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product-manufacturer association to delete"
                    }
                ],
                "tags": [
                    "ProductManufacturer"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/manufacturers": {
            "get": {
                "summary": "Get all manufacturers\r",
                "responses": {
                    "200": {
                        "description": "A list of all manufacturers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Manufacturer"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Manufacturers"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new manufacturer\r",
                "responses": {
                    "201": {
                        "description": "Manufacturer created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer created successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer name is required"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Sound LTD."
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4.5
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Manufacturers"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/manufacturers/{manufacturer_id}": {
            "get": {
                "summary": "Get a manufacturer by ID\r",
                "responses": {
                    "200": {
                        "description": "Manufacturer found",
                        "schema": {
                            "$ref": "#/definitions/Manufacturer"
                        }
                    },
                    "404": {
                        "description": "Manufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "manufacturer_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the manufacturer to retrieve"
                    }
                ],
                "tags": [
                    "Manufacturers"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update a manufacturer\r",
                "responses": {
                    "200": {
                        "description": "Manufacturer updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one field (name or rating) must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Manufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "manufacturer_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the manufacturer to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "New Manufacturer Name"
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4.5
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Manufacturers"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a manufacturer\r",
                "responses": {
                    "200": {
                        "description": "Manufacturer deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cannot delete manufacturer associated with products"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Manufacturer not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Manufacturer not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "manufacturer_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the manufacturer to delete"
                    }
                ],
                "tags": [
                    "Manufacturers"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/reviews/product/{product_id}": {
            "get": {
                "summary": "Get all reviews for a product\r",
                "responses": {
                    "200": {
                        "description": "A list of reviews for the product",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "review_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "example": "John Johnson"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "review_text": {
                                        "type": "string",
                                        "example": "Great product!"
                                    },
                                    "review_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-15T10:00:00Z"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the product to get reviews for"
                    }
                ],
                "tags": [
                    "Reviews"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/reviews/{review_id}": {
            "get": {
                "summary": "Get a review by ID\r",
                "responses": {
                    "200": {
                        "description": "Review found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "review_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "user_id": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "user_name": {
                                    "type": "string",
                                    "example": "John Johnson"
                                },
                                "product_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "product_name": {
                                    "type": "string",
                                    "example": "Wireless Headphones"
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4.5
                                },
                                "review_text": {
                                    "type": "string",
                                    "example": "Great product!"
                                },
                                "review_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-15T10:00:00Z"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Review not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the review to retrieve"
                    }
                ],
                "tags": [
                    "Reviews"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update a review\r",
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Review updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one of rating or review_text must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only update your own reviews"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Review not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the review to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rating": {
                                    "type": "number",
                                    "example": 4
                                },
                                "review_text": {
                                    "type": "string",
                                    "example": "Updated review text"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Reviews"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a review\r",
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Review deleted successfully"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only delete your own reviews"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Review not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the review to delete"
                    }
                ],
                "tags": [
                    "Reviews"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/reviews": {
            "post": {
                "summary": "Create a new review\r",
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Review created successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "product_id and rating are required"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Product not found"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "product_id",
                                "rating"
                            ],
                            "properties": {
                                "product_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 4.5
                                },
                                "review_text": {
                                    "type": "string",
                                    "example": "Great product!"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Reviews"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "get": {
                "summary": "Get all reviews (Admin only)\r",
                "responses": {
                    "200": {
                        "description": "A list of all reviews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "review_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "example": "John Johnson"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_name": {
                                        "type": "string",
                                        "example": "Wireless Headphones"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "review_text": {
                                        "type": "string",
                                        "example": "Great product!"
                                    },
                                    "review_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-15T10:00:00Z"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Reviews"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/payments": {
            "post": {
                "summary": "Create a new payment\r",
                "responses": {
                    "201": {
                        "description": "Payment processed successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Payment processed successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "order_id, amount_paid, and payment_method are required"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only pay for your own orders"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "order_id",
                                "amount_paid",
                                "payment_method"
                            ],
                            "properties": {
                                "order_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "amount_paid": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 199.99
                                },
                                "payment_method": {
                                    "type": "string",
                                    "example": "Credit Card"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "get": {
                "summary": "Get all payments (Admin only)\r",
                "responses": {
                    "200": {
                        "description": "A list of all payments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payment_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "order_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "example": "John Johnson"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-15T10:00:00Z"
                                    },
                                    "amount_paid": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "Credit Card"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/payments/order/{order_id}": {
            "get": {
                "summary": "Get payment details for an order\r",
                "responses": {
                    "200": {
                        "description": "Payment details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only view your own payments"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found for this order",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Payment not found for this order"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the order to get payment details for"
                    }
                ],
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/payments/{payment_id}": {
            "put": {
                "summary": "Update payment details (Admin only)\r",
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Payment updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one field (amount_paid or payment_method) must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Payment not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "payment_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the payment to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "amount_paid": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 199.99
                                },
                                "payment_method": {
                                    "type": "string",
                                    "example": "Credit Card"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a payment (Admin only)\r",
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Payment deleted successfully"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Payment not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "payment_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the payment to delete"
                    }
                ],
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/shippings": {
            "post": {
                "summary": "Create a new shipping record\r",
                "responses": {
                    "201": {
                        "description": "Shipping record created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Shipping record created successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "order_id and address_id are required"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order or Address not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Order not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "order_id",
                                "address_id"
                            ],
                            "properties": {
                                "order_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "address_id": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "shipping_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-15T10:00:00Z"
                                },
                                "estimated_delivery": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-20T18:00:00Z"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "Pending"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Shipping"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "get": {
                "summary": "Get all shipping records (Admin only)\r",
                "responses": {
                    "200": {
                        "description": "A list of all shipping records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "shipping_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "order_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "example": "John Johnson"
                                    },
                                    "address_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Turkey"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Istanbul"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "example": "3400"
                                    },
                                    "address_line": {
                                        "type": "string",
                                        "example": "ITU Maslak"
                                    },
                                    "shipping_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-15T10:00:00Z"
                                    },
                                    "estimated_delivery": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-20T18:00:00Z"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Shipped"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "Shipping"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/shippings/order/{order_id}": {
            "get": {
                "summary": "Get shipping details for an order\r",
                "responses": {
                    "200": {
                        "description": "Shipping details retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "shipping_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "order_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "address_id": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "country": {
                                    "type": "string",
                                    "example": "Turkey"
                                },
                                "city": {
                                    "type": "string",
                                    "example": "Istanbul"
                                },
                                "zip_code": {
                                    "type": "string",
                                    "example": "3400"
                                },
                                "address_line": {
                                    "type": "string",
                                    "example": "ITU Maslak"
                                },
                                "shipping_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-15T10:00:00Z"
                                },
                                "estimated_delivery": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-20T18:00:00Z"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "Shipped"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only view shipping details for your own orders"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipping details not found for this order",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Shipping details not found for this order"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the order to get shipping details for"
                    }
                ],
                "tags": [
                    "Shipping"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/shippings/{shipping_id}": {
            "put": {
                "summary": "Update a shipping record\r",
                "responses": {
                    "200": {
                        "description": "Shipping record updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Shipping record updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "At least one field (shipping_date, estimated_delivery, or status) must be provided"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipping record not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Shipping record not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "shipping_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the shipping record to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "shipping_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-15T10:00:00Z"
                                },
                                "estimated_delivery": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-12-20T18:00:00Z"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "Shipped"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Shipping"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a shipping record\r",
                "responses": {
                    "200": {
                        "description": "Shipping record deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Shipping record deleted successfully"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipping record not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Shipping record not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "shipping_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the shipping record to delete"
                    }
                ],
                "tags": [
                    "Shipping"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/addresses": {
            "post": {
                "summary": "Create a new address\r",
                "responses": {
                    "201": {
                        "description": "Address added successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Address added successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "All address fields are required"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "country",
                                "city",
                                "zip_code",
                                "address_line"
                            ],
                            "properties": {
                                "country": {
                                    "type": "string",
                                    "example": "Turkey"
                                },
                                "city": {
                                    "type": "string",
                                    "example": "Istanbul"
                                },
                                "zip_code": {
                                    "type": "string",
                                    "example": "34000"
                                },
                                "address_line": {
                                    "type": "string",
                                    "example": "ITU Maslak"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "get": {
                "summary": "Get all addresses for the current user\r",
                "responses": {
                    "200": {
                        "description": "A list of addresses for the current user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Address"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/addresses/{address_id}": {
            "get": {
                "summary": "Get a specific address\r",
                "responses": {
                    "200": {
                        "description": "Address found",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only view your own addresses"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Address not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the address to retrieve"
                    }
                ],
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "summary": "Update an address\r",
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Address updated successfully"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only update your own addresses"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Address not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the address to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "country": {
                                    "type": "string",
                                    "example": "Turkey"
                                },
                                "city": {
                                    "type": "string",
                                    "example": "Istanbul"
                                },
                                "zip_code": {
                                    "type": "string",
                                    "example": "34000"
                                },
                                "address_line": {
                                    "type": "string",
                                    "example": "ITU Maslak Campus"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete an address\r",
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Address deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete address associated with shipping records",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Cannot delete address associated with shipping records"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "You can only delete your own addresses"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Address not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "ID of the address to delete"
                    }
                ],
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/addresses/all": {
            "get": {
                "summary": "Get all addresses (Admin only)\r",
                "responses": {
                    "200": {
                        "description": "A list of all addresses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "address_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "example": "John Johnson"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Turkey"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Istanbul"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "example": "34000"
                                    },
                                    "address_line": {
                                        "type": "string",
                                        "example": "ITU Macka Campus"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admins only)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Admins only!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John Johnson"
                },
                "email": {
                    "type": "string",
                    "example": "John.johnson@example.com"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Wireless Headphones"
                },
                "description": {
                    "type": "string",
                    "example": "Description!!!"
                },
                "rating": {
                    "type": "number",
                    "format": "float",
                    "example": 4
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "product_manufacturer_id": {
                    "type": "integer",
                    "example": 1
                },
                "order_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-10-10T14:00:00Z"
                },
                "order_quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "Manufacturer": {
            "type": "object",
            "properties": {
                "manufacturer_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Sound LTD."
                },
                "rating": {
                    "type": "number",
                    "format": "float",
                    "example": 4.5
                }
            }
        },
        "ProductManufacturer": {
            "type": "object",
            "properties": {
                "product_manufacturer_id": {
                    "type": "integer",
                    "example": 1
                },
                "product_id": {
                    "type": "integer",
                    "example": 1
                },
                "product_name": {
                    "type": "string",
                    "example": "Wireless Headphones"
                },
                "manufacturer_id": {
                    "type": "integer",
                    "example": 1
                },
                "manufacturer_name": {
                    "type": "string",
                    "example": "Sound LTD."
                },
                "price": {
                    "type": "number",
                    "format": "float",
                    "example": 199.99
                },
                "stock": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "integer",
                    "example": 1
                },
                "country": {
                    "type": "string",
                    "example": "Turkey"
                },
                "city": {
                    "type": "string",
                    "example": "Istanbul"
                },
                "zip_code": {
                    "type": "string",
                    "example": "34000"
                },
                "address_line": {
                    "type": "string",
                    "example": "ITU Maslak"
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "payment_id": {
                    "type": "integer",
                    "example": 1
                },
                "order_id": {
                    "type": "integer",
                    "example": 1
                },
                "payment_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-15T10:00:00Z"
                },
                "amount_paid": {
                    "type": "number",
                    "format": "float",
                    "example": 199.99
                },
                "payment_method": {
                    "type": "string",
                    "example": "Credit Card"
                }
            }
        },
        "Shipping": {
            "type": "object",
            "properties": {
                "shipping_id": {
                    "type": "integer",
                    "example": 1
                },
                "order_id": {
                    "type": "integer",
                    "example": 1
                },
                "address_id": {
                    "type": "integer",
                    "example": 2
                },
                "shipping_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-15T10:00:00Z"
                },
                "estimated_delivery": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-20T18:00:00Z"
                },
                "status": {
                    "type": "string",
                    "example": "Shipped"
                }
            }
        }
    },
    "swagger": "2.0",
    "basePath": "/",
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your JWT using the Bearer prefix. Example input: \"Bearer {token}\""
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}